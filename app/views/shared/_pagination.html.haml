- options = {:show_numbers => true, :show_prevnext => false, :show_firstlast => false}.merge(defined?(opts) ? opts : {})
- m_col = ((page - 2 > 1 ? page - 2 : 1)..(page + 2 < pages ? page + 2 : pages)).to_a
- f_col = [pages > 1 ? 1 : nil].compact - m_col
- e_col = [pages > 1 ? pages : nil].compact - m_col
.pagination
 - if options[:text_before]
  != options[:text_before]
 - if options[:show_firstlast]
  - unless page <= 1
   = link_to "<<", url_for(params.merge(:page => '1'))
 - if options[:show_prevnext]
  - unless page <= 2
   = link_to "<", url_for(params.merge(:page => (page - 1).to_s))
 - if options[:show_numbers]
  - unless pages <= 1
   - f_col.each do |i|
    - if i == page
     = content_for :text_before_current
     %span.current= i.to_s
     = content_for :text_after_current
    - else
     = link_to i.to_s, url_for(params.merge(:page => i.to_s))
   - m_col.each do |i|
    - if i == page
     = content_for :text_before_current
     %span.current= i.to_s
     = content_for :text_after_current
    - else
     = link_to i.to_s, url_for(params.merge(:page => i.to_s))
   - e_col.each do |i|
    - if i == page
     = content_for :text_before_current
     %span.current= i.to_s
     = content_for :text_after_current
    - else
     = link_to i.to_s, url_for(params.merge(:page => i.to_s))
 - else
  - if options[:show_current]
   = content_for :text_before_current
   %span.current= page.to_s
   = content_for :text_after_current
 - if options[:show_prevnext]
  - unless page >= pages - 1
   = link_to ">", url_for(params.merge(:page => (page + 1).to_s))
 - if options[:show_firstlast]
  - unless page >= pages
   = link_to ">>", url_for(params.merge(:page => pages.to_s))
 - if options[:text_after]
  = options[:text_after]
- content_for :text_before_current do
 - if options[:text_before_current]
  != options[:text_before_current]
- content_for :text_after_current do
 - if options[:text_after_current]
  != options[:text_after_current]
