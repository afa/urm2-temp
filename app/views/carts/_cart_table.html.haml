#cart_store
 %h3= t(:selected_positions)
 = form_for :cart_item, :html => {:class => 'js', :method => :put}, :url => save_carts_path, :remote => true do |ff|

  %table.table-style
   %tr
    %th
    %th= t :type
    %th= t :name
    %th= t :brend
    %th= t :rohs
    %th= t :price
    %th= t :amount
    %th= t :location
    %th= t :prognosis
    %th= t :comment
    %th= t :requirement
    %th= t :user_price
    %th{:class => [@mandatory ? nil : "disabled"]}= t :application_mandatory
    %th{:colspan => 3}= t :action
    -# %th
   = render :partial => "carts/cart_collection.html.haml", :locals => {:app_list => app_list, :stores => @stores, :cart => cart}
  .padded
 .padded
  %p Итого по заказу <b>#{@usd_decor.decore cart.map{|i| i.current_price * i.amount }.inject(0.0){|r, i| r + i }}</b> USD, в том числе по ДМС <b>#{@usd_decor.decore cart.select{|i| i.is_a? CartWorld }.map{|i| i.current_price * i.amount }.inject(0.0){|r, i| r + i } }</b> USD.
  %p Итого товара к резервированию на сумму <b>#{@usd_decor.decore cart.select{|i| i.action == "reserve" }.map{|i| i.current_price * i.amount }.inject(0.0){|r, i| r + i } }</b> USD (доступная сумма резерва <b>#{@usd_decor.decore Axapta.custom_limits.reserve_available.to_f}</b> USD)
  %p Суммарный вес <b>#{cart.select{|i| not i.is_a? CartRequest }.map{|i| Axapta.item_info(:item_id => i.product_link)["weight"] || 0.0 }.inject(0.0){|r, i| r + i}/1000.0}</b> кг (без учёта ряда позиций)
